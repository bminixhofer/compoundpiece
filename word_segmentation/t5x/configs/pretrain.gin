from __gin__ import dynamic_registration

import __main__ as train_script
import seqio
import t5.data.mixtures
from t5x import utils
from t5x import models
from t5x import partitioning

import word_segmentation.t5x.task

include '../t5x/t5x/configs/runs/finetune.gin'

train_script.train:
  eval_period = 20000

train_script.train:
  train_dataset_cfg = @train/utils.DatasetConfig()
  train_eval_dataset_cfg = @train_eval/utils.DatasetConfig()
  infer_eval_dataset_cfg = @infer_eval/utils.DatasetConfig()

models.EncoderDecoderModel.predict_batch_with_aux.num_decodes = 4

partitioning.PjitPartitioner.num_partitions = 1

train/utils.DatasetConfig:
  pack = True

infer_eval/utils.DatasetConfig:
  mixture_or_task_name = %MIXTURE_OR_TASK_NAME
  task_feature_lengths = %TASK_FEATURE_LENGTHS
  split = 'validation'
  batch_size = 64
  shuffle = False
  seed = 42
  pack = False
  use_cached = %USE_CACHED_TASKS
  module = %MIXTURE_OR_TASK_MODULE

seqio.Evaluator:
  logger_cls = [@seqio.PyLoggingLogger, @seqio.TensorBoardLogger, @seqio.JSONLogger]
  num_examples = None  # Use all examples in the dataset.
  use_memory_cache = True

utils.SaveCheckpointConfig:
  period = 20000